from crccheck.crc import CrcX25

HDLC_ESCAPE = b'\x7d'
HDLC_FLAG = b'\x7e'
HDLC_MASK = b'\x20'

def _xor(bytes_a, bytes_b):
    assert len(bytes_a) == len(bytes_b)
    return bytes([ch_a ^ ch_b for ch_a, ch_b in zip(bytes_a, bytes_b)])

def escape(input):
    output = input[:]
    output = output.replace(HDLC_ESCAPE,
                            HDLC_ESCAPE + _xor(HDLC_ESCAPE, HDLC_MASK))
    output = output.replace(HDLC_FLAG,
                            HDLC_ESCAPE + _xor(HDLC_FLAG, HDLC_MASK))
    return output

def unescape(input):
    output = input[:]
    output = output.replace(HDLC_ESCAPE + _xor(HDLC_ESCAPE, HDLC_MASK),
                            HDLC_ESCAPE)
    output = output.replace(HDLC_ESCAPE + _xor(HDLC_FLAG, HDLC_MASK),
                            HDLC_FLAG)
    return output

def crc(input):
    crcinst = CrcX25()
    crcinst.process(input)
    return crcinst.final().to_bytes(2, byteorder='little', signed=False)
